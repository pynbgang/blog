---
layout: post
title: "[78] Subsets"
published: true
created:  2020 Aug 06 04:16:48 PM
tags: [python, leetcode, medium]
categories: [tech]

---

TABLE OF CONTENT

* auto-gen TOC:
{:toc}

- - -

# [[78] Subsets](https://leetcode.com/problems/subsets/description/)

    || * algorithms
    || * Medium (57.48%)
    || * Likes:    4012
    || * Dislikes: 85
    || * Total Accepted:    603.8K
    || * Total Submissions: 975.4K
    || * Testcase Example:  '[1,2,3]'
    || * Source Code:       78.subsets.py
    ||
    || Given a set of distinct integers, nums, return all possible subsets (the power set).
    ||
    || Note: The solution set must not contain duplicate subsets.
    ||
    || Example:
    ||
    ||
    || Input: nums = [1,2,3]
    || Output:
    || [
    || ⁠ [3],
    ||   [1],
    ||   [2],
    ||   [1,2,3],
    ||   [1,3],
    ||   [2,3],
    ||   [1,2],
    ||   []
    || ]

## owen

```python
class Solution(object):
    def subsets(self, nums):
        if not nums:return []
        lenth1=len(nums)
        if lenth1==1:return [[],nums]
        self.l=[[]]
        for i in range(1,lenth1):
            self.helper(nums,i,[])
        return self.l+[nums]
    def helper(self,l1,k,temp):
        if k==0:
            self.l.append(temp)
            return
        for i in range(len(l1)):
            temp.append(l1[i])
            self.helper(l1[i+1:],k-1,list(temp))
            temp.pop()
```

## jj

```python
class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        if not nums:
            return [[]]
        res = self.subsets(nums[1:])
        return res + [[nums[0]] + r for r in res]
```

假设拿出来第一个剩下的知道答案了，现在问你怎么根据部分答案组成新的答案.
递归的核心就是构造推演算法

