---
layout: post
title: "[69] Sqrt(x)"
published: true
created:  2021 Feb 14 09:57:01
tags: [python, leetcode]
categories: [tech]

---

TABLE OF CONTENT

* auto-gen TOC:
{:toc}

- - -

# [[69] Sqrt(x)](https://leetcode.com/problems/sqrtx/description/)

    || * algorithms
    || * Easy (34.64%)
    || * Likes:    1790
    || * Dislikes: 2226
    || * Total Accepted:    673.7K
    || * Total Submissions: 1.9M
    || * Testcase Example:  '4'
    || * Source Code:       69.sqrtx.py
    || 
    || Given a non-negative integer x, compute and return the square root of x.
    || 
    || Since the return type is an integer, the decimal digits are truncated,
    and only the integer part of the result is returned.
    || 
    ||  
    || Example 1:
    || 
    || 
    || Input: x = 4
    || Output: 2
    || 
    || 
    || Example 2:
    || 
    || Input: x = 8
    || Output: 2
    || Explanation: The square root of 8 is 2.82842..., and since the decimal
    part is truncated, 2 is returned.
    ||  
    || Constraints:
    || 
    || 	0 <= x <= 2^31 - 1

# solution

```python
class Solution(object):     #lmv
    def mySqrt(self, x):
        l, r = 0, x
        while l <= r:
            mid = l + (r-l)//2
            if mid * mid <= x < (mid+1)*(mid+1):
                return mid
            elif mid * mid > x:
                r = mid - 1
            else:
                l = mid + 1
```

or if not +1, -1 when moving l, r:

```python
class Solution(object):     #lmv
    def mySqrt(self, x):
        if x in [0, 1]: return x
        l, r = 0, x
        while l <= r:
            mid = l + (r-l)//2
            if mid * mid <= x < (mid+1)*(mid+1):
                return mid
            elif mid * mid > x:
                r = mid
            else:
                l = mid
```

